          
          {/* Right column - Contestants */}
          <div className="md:col-span-2">
            <Card className="h-full">
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
                <CardTitle className="text-xl font-bold">Contestants</CardTitle>
                <Button size="sm" className="gap-1">
                  <UserRound className="h-4 w-4" />
                  Add Contestant
                </Button>
              </CardHeader>
              
              <CardContent>
                {contingentWithDetails.contestants.length > 0 ? (
                  <div className="space-y-4">
                    {contingentWithDetails.contestants.map((contestant) => (
                      <Card key={contestant.id} className="overflow-hidden border-l-4 border-l-primary">
                        <CardHeader className="py-3">
                          <div className="flex items-start gap-3">
                            <Avatar className="h-9 w-9">
                              <AvatarFallback>{contestant.name.substring(0, 2)}</AvatarFallback>
                            </Avatar>
                            <div>
                              <CardTitle className="text-base">{contestant.name}</CardTitle>
                              <CardDescription>
                                ID: {contestant.ic || 'N/A'} 
                                {contestant.gender && (
                                  <span className="ml-2">
                                    Gender: {contestant.gender === 'M' ? 'Male' : 'Female'}
                                  </span>
                                )}
                              </CardDescription>
                            </div>
                            
                            <div className="ml-auto">
                              <Link href={`/organizer/participants/${contestant.id}`}>
                                <Button variant="outline" size="sm">View Profile</Button>
                              </Link>
                            </div>
                          </div>
                        </CardHeader>
                        
                        {contestant.contests.length > 0 && (
                          <CardContent className="pt-0 pb-3">
                            <Separator className="mb-3" />
                            <div className="text-sm font-medium mb-2">Contests</div>
                            <div className="flex flex-wrap gap-2">
                              {contestant.contests.map((participation) => (
                                <Badge 
                                  key={participation.id}
                                  variant="secondary" 
                                  className="flex items-center gap-1"
                                >
                                  <Award className="h-3 w-3" />
                                  {participation.contest.name}
                                </Badge>
                              ))}
                            </div>
                          </CardContent>
                        )}
                      </Card>
                    ))}
                  </div>
                ) : (
                  <div className="flex flex-col items-center justify-center py-12 text-center">
                    <ShieldAlert className="h-12 w-12 text-muted-foreground mb-4" />
                    <h3 className="text-lg font-medium">No Contestants</h3>
                    <p className="text-muted-foreground mb-4">
                      This contingent doesn't have any contestants yet.
                    </p>
                    <Button>
                      <UserRound className="h-4 w-4 mr-1" />
                      Add Contestant
                    </Button>
                  </div>
                )}
              </CardContent>
              
              {contingentWithDetails.contestants.length > 0 && (
                <CardFooter className="flex justify-between border-t pt-4">
                  <div className="text-sm text-muted-foreground">
                    Showing {contingentWithDetails.contestants.length} contestants
                  </div>
                  {contingentWithDetails.contestants.length > 10 && (
                    <Button variant="outline" size="sm">Load More</Button>
                  )}
                </CardFooter>
              )}
            </Card>
          </div>
        </div>
      </div>
    );
  } catch (error) {
    console.error("Error fetching contingent:", error);
    notFound();
  }
}
